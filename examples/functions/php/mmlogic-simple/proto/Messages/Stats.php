<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/protobuf-spec/messages.proto

namespace Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Holds statistics
 *
 * Generated from protobuf message <code>messages.Stats</code>
 */
class Stats extends \Google\Protobuf\Internal\Message
{
    /**
     * Number of results.
     *
     * Generated from protobuf field <code>int64 count = 1;</code>
     */
    private $count = 0;
    /**
     * How long it took to get the results. 
     *
     * Generated from protobuf field <code>double elapsed = 2;</code>
     */
    private $elapsed = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $count
     *           Number of results.
     *     @type float $elapsed
     *           How long it took to get the results. 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api\ProtobufSpec\Messages::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of results.
     *
     * Generated from protobuf field <code>int64 count = 1;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Number of results.
     *
     * Generated from protobuf field <code>int64 count = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->count = $var;

        return $this;
    }

    /**
     * How long it took to get the results. 
     *
     * Generated from protobuf field <code>double elapsed = 2;</code>
     * @return float
     */
    public function getElapsed()
    {
        return $this->elapsed;
    }

    /**
     * How long it took to get the results. 
     *
     * Generated from protobuf field <code>double elapsed = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setElapsed($var)
    {
        GPBUtil::checkDouble($var);
        $this->elapsed = $var;

        return $this;
    }

}

