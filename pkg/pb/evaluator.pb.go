// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/evaluator.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EvaluateRequest struct {
	// List of Matches to evaluate.
	Match                *Match   `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvaluateRequest) Reset()         { *m = EvaluateRequest{} }
func (m *EvaluateRequest) String() string { return proto.CompactTextString(m) }
func (*EvaluateRequest) ProtoMessage()    {}
func (*EvaluateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c58cb7dff9acb0f, []int{0}
}

func (m *EvaluateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateRequest.Unmarshal(m, b)
}
func (m *EvaluateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateRequest.Marshal(b, m, deterministic)
}
func (m *EvaluateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateRequest.Merge(m, src)
}
func (m *EvaluateRequest) XXX_Size() int {
	return xxx_messageInfo_EvaluateRequest.Size(m)
}
func (m *EvaluateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateRequest proto.InternalMessageInfo

func (m *EvaluateRequest) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

type EvaluateResponse struct {
	// Accepted list of Matches.
	Match                *Match   `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvaluateResponse) Reset()         { *m = EvaluateResponse{} }
func (m *EvaluateResponse) String() string { return proto.CompactTextString(m) }
func (*EvaluateResponse) ProtoMessage()    {}
func (*EvaluateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c58cb7dff9acb0f, []int{1}
}

func (m *EvaluateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateResponse.Unmarshal(m, b)
}
func (m *EvaluateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateResponse.Marshal(b, m, deterministic)
}
func (m *EvaluateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateResponse.Merge(m, src)
}
func (m *EvaluateResponse) XXX_Size() int {
	return xxx_messageInfo_EvaluateResponse.Size(m)
}
func (m *EvaluateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateResponse proto.InternalMessageInfo

func (m *EvaluateResponse) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func init() {
	proto.RegisterType((*EvaluateRequest)(nil), "api.EvaluateRequest")
	proto.RegisterType((*EvaluateResponse)(nil), "api.EvaluateResponse")
}

func init() { proto.RegisterFile("api/evaluator.proto", fileDescriptor_8c58cb7dff9acb0f) }

var fileDescriptor_8c58cb7dff9acb0f = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x6f, 0x13, 0x31,
	0x14, 0xd4, 0x6e, 0xa0, 0x50, 0x73, 0xa0, 0x32, 0x1f, 0xaa, 0x22, 0x84, 0x4c, 0x7a, 0x29, 0x11,
	0x59, 0xa7, 0x69, 0x4e, 0x41, 0x48, 0x2d, 0x90, 0x43, 0xa5, 0x02, 0x52, 0x90, 0x38, 0x70, 0x73,
	0xbc, 0xaf, 0x5e, 0x43, 0xd6, 0xcf, 0xf8, 0x79, 0x5b, 0xce, 0x9c, 0x39, 0xc1, 0x8d, 0x9f, 0xc0,
	0x95, 0x9f, 0xc2, 0x8d, 0x33, 0x3f, 0x04, 0xed, 0x2e, 0x51, 0xa2, 0x14, 0x89, 0xd3, 0x6a, 0x67,
	0xe6, 0xcd, 0xd8, 0xe3, 0xc7, 0x6e, 0x29, 0x6f, 0x25, 0x9c, 0xab, 0x45, 0xa5, 0x22, 0x86, 0xcc,
	0x07, 0x8c, 0xc8, 0x3b, 0xca, 0xdb, 0x2e, 0xaf, 0x99, 0x12, 0x88, 0x94, 0x01, 0x6a, 0x89, 0xee,
	0x3d, 0x83, 0x68, 0x16, 0x20, 0x6b, 0x4a, 0x39, 0x87, 0x51, 0x45, 0x8b, 0x6e, 0xc9, 0x3e, 0x6a,
	0x3e, 0x7a, 0x60, 0xc0, 0x0d, 0xe8, 0x42, 0x19, 0x03, 0x41, 0xa2, 0x6f, 0x14, 0x97, 0xd5, 0xbd,
	0x43, 0x76, 0x73, 0xda, 0xe6, 0xc2, 0x0c, 0x3e, 0x54, 0x40, 0x91, 0x0b, 0x76, 0xb5, 0x54, 0x51,
	0x17, 0xbb, 0x89, 0x48, 0xf6, 0x6f, 0x8c, 0x58, 0xa6, 0xbc, 0xcd, 0x5e, 0xd4, 0xc8, 0xac, 0x25,
	0x7a, 0x63, 0xb6, 0xb3, 0x1a, 0x22, 0x8f, 0x8e, 0xe0, 0xff, 0x53, 0x23, 0x62, 0xdb, 0xd3, 0xe5,
	0x15, 0xf9, 0x19, 0xbb, 0xbe, 0xb4, 0xe0, 0xb7, 0x1b, 0xed, 0xc6, 0x31, 0xba, 0x77, 0x36, 0xd0,
	0x36, 0xa7, 0xf7, 0xf0, 0xd3, 0xcf, 0xdf, 0x5f, 0xd3, 0xbd, 0xde, 0x7d, 0x79, 0x7e, 0xb0, 0xaa,
	0x4c, 0x36, 0x11, 0x40, 0x93, 0xbf, 0x08, 0x4c, 0x92, 0xfe, 0x7e, 0x32, 0x4c, 0x9e, 0x7e, 0xee,
	0x7c, 0x39, 0xfe, 0x95, 0xf2, 0x1f, 0xc9, 0x5a, 0x78, 0xef, 0x84, 0xb1, 0x57, 0x1e, 0x9c, 0x68,
	0x8e, 0xc7, 0xef, 0x16, 0x31, 0x7a, 0x9a, 0x48, 0x89, 0x1e, 0xdc, 0xa0, 0x31, 0xca, 0x72, 0x38,
	0xef, 0xee, 0xad, 0xfe, 0x07, 0xb9, 0x25, 0x5d, 0x11, 0x1d, 0xb5, 0xcd, 0x9b, 0x80, 0x95, 0xa7,
	0x4c, 0x63, 0xd9, 0x7f, 0xc3, 0xf8, 0xb1, 0x57, 0xba, 0x00, 0x31, 0xca, 0x86, 0xe2, 0xd4, 0x6a,
	0xa8, 0xcb, 0x38, 0x5a, 0x5a, 0x1a, 0x1b, 0x8b, 0x6a, 0x5e, 0x2b, 0x65, 0x3b, 0x7a, 0x86, 0xc1,
	0xa8, 0x12, 0x68, 0x2d, 0x4c, 0xce, 0x17, 0x38, 0x97, 0xa5, 0xa2, 0x08, 0x41, 0x9e, 0x9e, 0x3c,
	0x9b, 0xbe, 0x7c, 0x3d, 0x1d, 0x75, 0x0e, 0xb2, 0x61, 0x3f, 0x4d, 0xd2, 0xd1, 0x8e, 0xf2, 0x7e,
	0x61, 0x75, 0xf3, 0x68, 0xf2, 0x1d, 0xa1, 0x9b, 0x5c, 0x42, 0x66, 0x8f, 0x59, 0x67, 0x3c, 0x1c,
	0xf3, 0x31, 0xeb, 0xcf, 0x20, 0x56, 0xc1, 0x41, 0x2e, 0x2e, 0x0a, 0x70, 0x22, 0x16, 0x20, 0x02,
	0x10, 0x56, 0x41, 0x83, 0xc8, 0x11, 0x48, 0x38, 0x8c, 0x02, 0x3e, 0x5a, 0x8a, 0x19, 0xdf, 0x62,
	0x57, 0xbe, 0xa5, 0xc9, 0xb5, 0xf0, 0x84, 0xed, 0xae, 0xca, 0x10, 0xcf, 0x51, 0x57, 0x25, 0xb8,
	0x76, 0x49, 0xf8, 0x83, 0x7f, 0x57, 0x23, 0xc9, 0x46, 0x90, 0x39, 0x6a, 0x92, 0x6f, 0xc5, 0x06,
	0xb5, 0x76, 0x2f, 0xff, 0xde, 0x48, 0x3f, 0xff, 0x9e, 0x6e, 0xd7, 0xfe, 0x8d, 0xfd, 0x7c, 0xab,
	0xd9, 0xba, 0xc3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x73, 0xae, 0x47, 0xde, 0xf1, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EvaluatorClient is the client API for Evaluator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EvaluatorClient interface {
	// Evaluate accepts a list of proposed matches, evaluates them for quality,
	// collisions etc. and returns matches that should be accepted as results.
	Evaluate(ctx context.Context, opts ...grpc.CallOption) (Evaluator_EvaluateClient, error)
}

type evaluatorClient struct {
	cc *grpc.ClientConn
}

func NewEvaluatorClient(cc *grpc.ClientConn) EvaluatorClient {
	return &evaluatorClient{cc}
}

func (c *evaluatorClient) Evaluate(ctx context.Context, opts ...grpc.CallOption) (Evaluator_EvaluateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Evaluator_serviceDesc.Streams[0], "/api.Evaluator/Evaluate", opts...)
	if err != nil {
		return nil, err
	}
	x := &evaluatorEvaluateClient{stream}
	return x, nil
}

type Evaluator_EvaluateClient interface {
	Send(*EvaluateRequest) error
	Recv() (*EvaluateResponse, error)
	grpc.ClientStream
}

type evaluatorEvaluateClient struct {
	grpc.ClientStream
}

func (x *evaluatorEvaluateClient) Send(m *EvaluateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *evaluatorEvaluateClient) Recv() (*EvaluateResponse, error) {
	m := new(EvaluateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EvaluatorServer is the server API for Evaluator service.
type EvaluatorServer interface {
	// Evaluate accepts a list of proposed matches, evaluates them for quality,
	// collisions etc. and returns matches that should be accepted as results.
	Evaluate(Evaluator_EvaluateServer) error
}

// UnimplementedEvaluatorServer can be embedded to have forward compatible implementations.
type UnimplementedEvaluatorServer struct {
}

func (*UnimplementedEvaluatorServer) Evaluate(srv Evaluator_EvaluateServer) error {
	return status.Errorf(codes.Unimplemented, "method Evaluate not implemented")
}

func RegisterEvaluatorServer(s *grpc.Server, srv EvaluatorServer) {
	s.RegisterService(&_Evaluator_serviceDesc, srv)
}

func _Evaluator_Evaluate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EvaluatorServer).Evaluate(&evaluatorEvaluateServer{stream})
}

type Evaluator_EvaluateServer interface {
	Send(*EvaluateResponse) error
	Recv() (*EvaluateRequest, error)
	grpc.ServerStream
}

type evaluatorEvaluateServer struct {
	grpc.ServerStream
}

func (x *evaluatorEvaluateServer) Send(m *EvaluateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *evaluatorEvaluateServer) Recv() (*EvaluateRequest, error) {
	m := new(EvaluateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Evaluator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Evaluator",
	HandlerType: (*EvaluatorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Evaluate",
			Handler:       _Evaluator_Evaluate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/evaluator.proto",
}
