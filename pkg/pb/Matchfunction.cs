// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api/matchfunction.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenMatch {

  /// <summary>Holder for reflection information generated from api/matchfunction.proto</summary>
  public static partial class MatchfunctionReflection {

    #region Descriptor
    /// <summary>File descriptor for api/matchfunction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchfunctionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdhcGkvbWF0Y2hmdW5jdGlvbi5wcm90bxIDYXBpGhJhcGkvbWVzc2FnZXMu",
            "cHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aLHByb3RvYy1n",
            "ZW4tc3dhZ2dlci9vcHRpb25zL2Fubm90YXRpb25zLnByb3RvIjAKClJ1blJl",
            "cXVlc3QSIgoHcHJvZmlsZRgBIAEoCzIRLmFwaS5NYXRjaFByb2ZpbGUiKwoL",
            "UnVuUmVzcG9uc2USHAoIcHJvcG9zYWwYASABKAsyCi5hcGkuTWF0Y2gyXQoN",
            "TWF0Y2hGdW5jdGlvbhJMCgNSdW4SDy5hcGkuUnVuUmVxdWVzdBoQLmFwaS5S",
            "dW5SZXNwb25zZSIggtPkkwIaIhUvdjEvbWF0Y2hmdW5jdGlvbjpydW46ASow",
            "AUKRA1ogb3Blbi1tYXRjaC5kZXYvb3Blbi1tYXRjaC9wa2cvcGKqAglPcGVu",
            "TWF0Y2iSQd8CErgBCg5NYXRjaCBGdW5jdGlvbiJJCgpPcGVuIE1hdGNoEhZo",
            "dHRwczovL29wZW4tbWF0Y2guZGV2GiNvcGVuLW1hdGNoLWRpc2N1c3NAZ29v",
            "Z2xlZ3JvdXBzLmNvbSpWChJBcGFjaGUgMi4wIExpY2Vuc2USQGh0dHBzOi8v",
            "Z2l0aHViLmNvbS9nb29nbGVmb3JnYW1lcy9vcGVuLW1hdGNoL2Jsb2IvbWFz",
            "dGVyL0xJQ0VOU0UyAzEuMCoCAQIyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxp",
            "Y2F0aW9uL2pzb25SOwoDNDA0EjQKKlJldHVybmVkIHdoZW4gdGhlIHJlc291",
            "cmNlIGRvZXMgbm90IGV4aXN0LhIGCgSaAgEHcj0KGE9wZW4gTWF0Y2ggRG9j",
            "dW1lbnRhdGlvbhIhaHR0cHM6Ly9vcGVuLW1hdGNoLmRldi9zaXRlL2RvY3Mv",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OpenMatch.MessagesReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.RunRequest), global::OpenMatch.RunRequest.Parser, new[]{ "Profile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.RunResponse), global::OpenMatch.RunResponse.Parser, new[]{ "Proposal" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RunRequest : pb::IMessage<RunRequest> {
    private static readonly pb::MessageParser<RunRequest> _parser = new pb::MessageParser<RunRequest>(() => new RunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.MatchfunctionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRequest(RunRequest other) : this() {
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRequest Clone() {
      return new RunRequest(this);
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 1;
    private global::OpenMatch.MatchProfile profile_;
    /// <summary>
    /// The MatchProfile that describes the Match that this MatchFunction needs to
    /// generate proposals for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.MatchProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Profile, other.Profile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (profile_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunRequest other) {
      if (other == null) {
        return;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::OpenMatch.MatchProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (profile_ == null) {
              Profile = new global::OpenMatch.MatchProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RunResponse : pb::IMessage<RunResponse> {
    private static readonly pb::MessageParser<RunResponse> _parser = new pb::MessageParser<RunResponse>(() => new RunResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.MatchfunctionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunResponse(RunResponse other) : this() {
      proposal_ = other.proposal_ != null ? other.proposal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunResponse Clone() {
      return new RunResponse(this);
    }

    /// <summary>Field number for the "proposal" field.</summary>
    public const int ProposalFieldNumber = 1;
    private global::OpenMatch.Match proposal_;
    /// <summary>
    /// The proposal generated by this MatchFunction Run.
    /// Note that OpenMatch will validate the proposals, a valid match should contain at least one ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.Match Proposal {
      get { return proposal_; }
      set {
        proposal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Proposal, other.Proposal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposal_ != null) hash ^= Proposal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Proposal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunResponse other) {
      if (other == null) {
        return;
      }
      if (other.proposal_ != null) {
        if (proposal_ == null) {
          Proposal = new global::OpenMatch.Match();
        }
        Proposal.MergeFrom(other.Proposal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposal_ == null) {
              Proposal = new global::OpenMatch.Match();
            }
            input.ReadMessage(Proposal);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
